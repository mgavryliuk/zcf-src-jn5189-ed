set(TOOLCHAIN_ABS_PATH "/opt/arm-none-eabi")
set(TOOLCHAIN_BIN_DIR "${TOOLCHAIN_ABS_PATH}/bin")
set(TARGET_TRIPLET "arm-none-eabi")

set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm)
set(VECTOR_TABLE_SIZE 512)
set(RAM_VECTOR_TABLE 1)

set(CMAKE_C_COMPILER ${TOOLCHAIN_BIN_DIR}/${TARGET_TRIPLET}-gcc CACHE INTERNAL "C compiler")
set(CMAKE_CXX_COMPILER ${TOOLCHAIN_BIN_DIR}/${TARGET_TRIPLET}-g++ CACHE INTERNAL "C++ compiler")
set(CMAKE_ASM_COMPILER ${TOOLCHAIN_BIN_DIR}/${TARGET_TRIPLET}-gcc)
set(CMAKE_SIZE ${TOOLCHAIN_BIN_DIR}/${TARGET_TRIPLET}-size CACHE INTERNAL "size tool")
set(CMAKE_OBJCOPY ${TOOLCHAIN_BIN_DIR}/${TARGET_TRIPLET}-objcopy CACHE INTERNAL "objcopy tool")
set(CMAKE_OBJDUMP ${TOOLCHAIN_BIN_DIR}/${TARGET_TRIPLET}-objdump CACHE INTERNAL "objdump tool")

set(CMAKE_C_FLAGS_RELEASE "-Os" CACHE INTERNAL "c compiler flags release")
set(CMAKE_CXX_FLAGS_RELEASE "-Os" CACHE INTERNAL "cxx compiler flags release")
set(CMAKE_ASM_FLAGS_RELEASE "" CACHE INTERNAL "asm compiler flags release")
set(CMAKE_EXE_LINKER_FLAGS_RELESE "-Os" CACHE INTERNAL "linker flags release")

set(CMAKE_C_FLAGS "-Os -fno-common -Wall -ffunction-sections -fdata-sections -ffreestanding -fno-builtin -mcpu=cortex-m4 -mthumb -fstack-usage -specs=nano.specs" CACHE INTERNAL "c compiler flags")
set(CMAKE_ASM_FLAGS "-Os -fno-common -Wall -ffunction-sections -fdata-sections -ffreestanding -fno-builtin -mcpu=cortex-m4 -mthumb -fstack-usage -specs=nano.specs" CACHE INTERNAL "asm compiler flags")
set(CMAKE_EXE_LINKER_FLAGS "-Wl,--gc-sections -nostartfiles -Xlinker --gc-sections -mcpu=cortex-m4 -mthumb -fomit-frame-pointer -fshort-enums -Wl,--defsym,vector_table_size=${VECTOR_TABLE_SIZE} -Wl,--defsym,__ram_vector_table__=${RAM_VECTOR_TABLE} --specs=nosys.specs" CACHE INTERNAL "executable linker flags")

set(CMAKE_MODULE_LINKER_FLAGS "" CACHE INTERNAL "module linker flags")
set(CMAKE_SHARED_LINKER_FLAGS "" CACHE INTERNAL "shared linker flags")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

message(STATUS "")
message(STATUS "======================")
message(STATUS "Toolchain paths:")
message(STATUS "  TOOLCHAIN_BIN_DIR = ${TOOLCHAIN_BIN_DIR}")
message(STATUS "")
message(STATUS "  CMAKE_C_COMPILER = ${CMAKE_C_COMPILER}")
message(STATUS "  CMAKE_CXX_COMPILER = ${CMAKE_CXX_COMPILER}")
message(STATUS "  CMAKE_ASM_COMPILER = ${CMAKE_ASM_COMPILER}")
message(STATUS "  CMAKE_SIZE = ${CMAKE_SIZE}")
message(STATUS "  CMAKE_OBJCOPY = ${CMAKE_OBJCOPY}")
message(STATUS "  CMAKE_OBJDUMP = ${CMAKE_OBJDUMP}")
message(STATUS "======================")
message(STATUS "Compiler flags:")
message(STATUS "  CMAKE_C_FLAGS = ${CMAKE_C_FLAGS}")
message(STATUS "  CMAKE_ASM_FLAGS = ${CMAKE_ASM_FLAGS}")
message(STATUS "  CMAKE_EXE_LINKER_FLAGS = ${CMAKE_EXE_LINKER_FLAGS}")
message(STATUS "  CMAKE_MODULE_LINKER_FLAGS = ${CMAKE_MODULE_LINKER_FLAGS}")
message(STATUS "  CMAKE_SHARED_LINKER_FLAGS = ${CMAKE_SHARED_LINKER_FLAGS}")
message(STATUS "")
message(STATUS "  CMAKE_C_FLAGS_RELEASE = ${CMAKE_C_FLAGS_RELEASE}")
message(STATUS "  CMAKE_ASM_FLAGS_RELEASE = ${CMAKE_ASM_FLAGS_RELEASE}")
message(STATUS "  CMAKE_EXE_LINKER_FLAGS_RELEASE = ${CMAKE_EXE_LINKER_FLAGS_RELEASE}")
message(STATUS "")
